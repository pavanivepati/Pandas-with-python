#Write a Pandas program to create and display a DataFrame from a specified  dictionary data which has the index labels.

import pandas as pd
import numpy as np
exam_data = {'name': ['Anastasia', 'Dima', 'Katherine', 'James', 'Emily',
'Michael', 'Matthew', 'Laura', 'Kevin', 'Jonas'],
'score': [12.5, 9, 16.5, np.nan, 9, 20, 14.5, np.nan, 8, 19],
'attempts': [1, 3, 2, 3, 2, 3, 1, 1, 2, 1],
'qualify': ['yes', 'no', 'yes', 'no', 'no', 'yes', 'yes', 'no', 'no', 'yes']}
labels = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j']
print("Displaying a data frame from a specified dictionary:\n")
print(pd.DataFrame(exam_data,index=labels))

output:
Displaying a data frame from a specified dictionary:

        name  score  attempts qualify
a  Anastasia   12.5         1     yes
b       Dima    9.0         3      no
c  Katherine   16.5         2     yes
d      James    NaN         3      no
e      Emily    9.0         2      no
f    Michael   20.0         3     yes
g    Matthew   14.5         1     yes
h      Laura    NaN         1      no
i      Kevin    8.0         2      no
j      Jonas   19.0         1     yes

#Write a Pandas program to change the name 'James' to 'Suresh' in name column of the DataFrame.

import pandas as pd
import numpy as np
exam_data = {'name': ['Anastasia', 'Dima', 'Katherine', 'James', 'Emily',
'Michael', 'Matthew', 'Laura', 'Kevin', 'Jonas'],
'score': [12.5, 9, 16.5, np.nan, 9, 20, 14.5, np.nan, 8, 19],
'attempts': [1, 3, 2, 3, 2, 3, 1, 1, 2, 1],
'qualify': ['yes', 'no', 'yes', 'no', 'no', 'yes', 'yes', 'no', 'no', 'yes']}
labels = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j']
df=pd.DataFrame(exam_data,index=labels)
print("Original data frame :\n")
print(df)
print("\n Changing name of James to Suresh :\n")
df['name']=df['name'].replace('James','Suresh')
print(df)

output:

Original data frame :

        name  score  attempts qualify
a  Anastasia   12.5         1     yes
b       Dima    9.0         3      no
c  Katherine   16.5         2     yes
d      James    NaN         3      no
e      Emily    9.0         2      no
f    Michael   20.0         3     yes
g    Matthew   14.5         1     yes
h      Laura    NaN         1      no
i      Kevin    8.0         2      no
j      Jonas   19.0         1     yes

 Changing name of James to Suresh :

        name  score  attempts qualify
a  Anastasia   12.5         1     yes
b       Dima    9.0         3      no
c  Katherine   16.5         2     yes
d     Suresh    NaN         3      no
e      Emily    9.0         2      no
f    Michael   20.0         3     yes
g    Matthew   14.5         1     yes
h      Laura    NaN         1      no
i      Kevin    8.0         2      no
j      Jonas   19.0         1     yes


#Write a Pandas program to insert a new column in existing DataFrame.

import pandas as pd
import numpy as np
exam_data = {'name': ['Anastasia', 'Dima', 'Katherine', 'James', 'Emily',
'Michael', 'Matthew', 'Laura', 'Kevin', 'Jonas'],
'score': [12.5, 9, 16.5, np.nan, 9, 20, 14.5, np.nan, 8, 19],
'attempts': [1, 3, 2, 3, 2, 3, 1, 1, 2, 1],
'qualify': ['yes', 'no', 'yes', 'no', 'no', 'yes', 'yes', 'no', 'no', 'yes']}
labels = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j']
df=pd.DataFrame(exam_data,index=labels)
print("Original data frame :\n")
print(df)
age=[19,21,18,20,17,19,20,22,23,18]
df['age']=age
print("\n After inserting new column age :\n")
print(df)

output:

Original data frame :

        name  score  attempts qualify
a  Anastasia   12.5         1     yes
b       Dima    9.0         3      no
c  Katherine   16.5         2     yes
d      James    NaN         3      no
e      Emily    9.0         2      no
f    Michael   20.0         3     yes
g    Matthew   14.5         1     yes
h      Laura    NaN         1      no
i      Kevin    8.0         2      no
j      Jonas   19.0         1     yes

 After inserting new column age :

        name  score  attempts qualify  age
a  Anastasia   12.5         1     yes   19
b       Dima    9.0         3      no   21
c  Katherine   16.5         2     yes   18
d      James    NaN         3      no   20
e      Emily    9.0         2      no   17
f    Michael   20.0         3     yes   19
g    Matthew   14.5         1     yes   20
h      Laura    NaN         1      no   22
i      Kevin    8.0         2      no   23
j      Jonas   19.0         1     yes   18


#Write a Pandas program to get list from DataFrame column headers.

import pandas as pd
import numpy as np
exam_data = {'name': ['Anastasia', 'Dima', 'Katherine', 'James', 'Emily',
'Michael', 'Matthew', 'Laura', 'Kevin', 'Jonas'],
'score': [12.5, 9, 16.5, np.nan, 9, 20, 14.5, np.nan, 8, 19],
'attempts': [1, 3, 2, 3, 2, 3, 1, 1, 2, 1],
'qualify': ['yes', 'no', 'yes', 'no', 'no', 'yes', 'yes', 'no', 'no', 'yes']}
labels = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j']
df=pd.DataFrame(exam_data,index=labels)
age=[19,21,18,20,17,19,20,22,23,18]
df['age']=age
print(df)
print("Method 1 :")
print("\n",list(df.columns.values),"\n")
print("Method 2 :\n")
print(list(df))


output:

        name  score  attempts qualify  age
a  Anastasia   12.5         1     yes   19
b       Dima    9.0         3      no   21
c  Katherine   16.5         2     yes   18
d      James    NaN         3      no   20
e      Emily    9.0         2      no   17
f    Michael   20.0         3     yes   19
g    Matthew   14.5         1     yes   20
h      Laura    NaN         1      no   22
i      Kevin    8.0         2      no   23
j      Jonas   19.0         1     yes   18
Method 1 :

 ['name', 'score', 'attempts', 'qualify', 'age'] 

Method 2 :

['name', 'score', 'attempts', 'qualify', 'age']

